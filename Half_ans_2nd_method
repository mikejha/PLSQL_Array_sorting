-- Created on 16-05-2025 by USER 
declare 
  -- Local variables here
  i integer;
  type vx is table of int index by pls_integer;
  x1 vx;
  x2 vx;
  unsorted_array vx;
  ans_array vx;
  x2_count int := 1;
  v_count int := 0;
  last_id_count int;
begin
  -- Test statements here
  dbms_output.put_line('check');
  for i in 1 .. 10 loop
    if mod(i,2) = 0 then
      x1(i):= i;
    else 
      x1(i) := i + 2;
    end if;
  end loop;
  
  while x2_count < 10 loop
     v_count := v_count +1;
     x2(v_count):= x2_count;
     x2_count := x2_count + 2;
  end loop;
     v_count := 0; --reinitialize it to 0;
  
  for i in x1.first.. x1.last loop
    dbms_output.put_line('values in x1 array '||x1(i));
  end loop;
  
  for i in x2.first.. x2.last loop
    dbms_output.put_line('value in x2 array '||x2(i));
  end loop;
-- NOW QUESTION START --
-- create the sorted array by combining the elements of x1 and x2 arrays, so answer will be:
-- x1 = [3,2,5,4,7,6,9,8,11,10]    x2 = [1,3,5,7,9]
-- ans_array = [1,2,3,3,4,5,5,6,7,7,8,9,9,10,11]

/* STEP 1: add the elements of both the array and make an unsorted_array */ 
/*
FOR i IN x1.first..x1.last LOOP
  IF x1.EXISTS(i) THEN 
    --dbms_output.put_line('hi');
    v_count := v_count + 1;
    unsorted_array(v_count):= x1(i); 
  END IF;
END LOOP;
 -- IMPORANT --
 -- v_count := 0; --reinitialize it to 0; --***DO NOT DO THIS BECAUSE WE HAVE TO INSERT THE DATA CONTINOUSLY.
FOR i IN x2.first..x2.last LOOP
  IF x2.EXISTS(i) THEN 
    --dbms_output.put_line('hi');
    v_count := v_count + 1;
    unsorted_array(v_count):= x2(i); 
  END IF;
END LOOP;
*/
 v_count := 0; --reinitialize it to 0;
  

/* --- using .LAST for the array having no elements gyaan --- */ -- leave below commented:
/*
unsorted_array(1) := 0; -- ********Mikelarry: .LAST is only applicable IF LAST ELEMENT IS PRESENT in the LIST, 
                        --                     thats why INSERT THE FIRST ELEMENT THEN ONLY .LAST WILL WORK below.
FOR i IN x2.first..x2.last LOOP
  IF x2.EXISTS(i) THEN 
    --dbms_output.put_line('hi');
    unsorted_array(unsorted_array.last) := i;
  END IF;
END LOOP;
*/

/*NOTE: y0u can achieve step one, by simply doing below also */
 BEGIN
 unsorted_array := x1; --directly assigning the value of x1 to unsorted_array
 
 IF unsorted_array.LAST IS NOT NULL THEN last_id_count := 0; ELSE last_id_count:= 0; END IF;
 FOR i in x2.first .. x2.last LOOP
  IF x2.EXISTS(i) THEN
    last_id_count:= unsorted_array.LAST + 1; -- so in order to continue the indexing of the elements of unsorted_Array, 
                                             -- we have to add plus 1 into the exisitng last index number of the last element of unsorted_array.
    unsorted_array(last_id_count):= x2(i);
  END IF;
 END LOOP;
END;
 
/* STEP 2: Once making of unsorted_array is done, then sort the array elements of the array in ascending order */ 

for i in unsorted_array.first..unsorted_array.last loop
  dbms_output.put_line(unsorted_array(i));
end loop;
end;

